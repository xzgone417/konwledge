JS是单线程，单线程即任务是串行的，后一个任务需要等待前一个任务的执行，这就可能出现长时间的等待。
但由于类似ajax网络请求、setTimeout时间延迟、DOM事件的用户交互等，
这些任务并不消耗 CPU，是一种空等，资源浪费，因此出现了异步。
JS虽然是单线程但浏览器有多个线程
通过将任务交给相应的异步模块去处理，主线程的效率大大提升，可以并行的去处理其他的操作。当异步处理完成，
主线程空闲时，主线程读取相应的callback，进行后续的操作，最大程度的利用CPU。

即相当于异步线程是平行于主线程的一个线程。然后异步线程把处理得到的结果即回调函数返还给主线程。
主线程只需要读取异步任务的回调函数就可以得到异步处理的结果了。

实质是后台线程将任务交给任务队列，主栈里没有任务后就会从任务队列里拿任务来执行
先从微任务队列拿任务，再从宏任务队列拿