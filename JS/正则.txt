((?![IO])[a-zA-Z0-9](?<![IO]))
(?![IO])限制同一个括号内的总值时得在前面才能起作用
(?<![IO])限制同一个括号内时得在后面才能起作用
三个限定条件限定一个值必须按这样的顺序才可以，
如果只有一个限定条件限定一个值则没有判定条件顺序，而是元素排列了

判断等于也是同理
((?=[IO])[a-zA-Z0-9](?<=[IO]))

注意，她匹配的值是[a-zA-Z0-9]，没有[a-zA-Z0-9]她只是条件没有用于判断的值

这种括号嵌套的，里面的[a-zA-Z0-9]这些变量值也会表达值的，因为已经和（？<！=）这些判断条件是并行的了

W(?!O)
而这种之匹配W的摆放顺序则刚好相反,因为[a-zA-Z0-9]不仅表达一个值，也是一个判定条件，即为变量，而W为常量，常量与变量摆放顺序不同
常量匹配时也只会匹配常量，W(?=O)只做判断，截取WO的W，不娶O。而(?!O)理解更简单，娶else的意思就行了.
正如if，else的关系，if必须正确匹配到，如果有两个判定条件则必须全对才能匹配，
else只需要匹配不到就行了，建议一次只用一个，用两个只会产生歧义，



而(?:[IO])理解更简单，因为他不是单纯判定条件，而是变量值形式
A(?:[IO]|47)[A-K]  匹配AIK和A47K